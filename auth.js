// // auth.js
// var express = require('express');
// var router = express.Router();
// var bodyParser = require('body-parser');
// var jwt = require('jsonwebtoken');
// var bcrypt = require('bcryptjs');
// const { Pool } = require('pg');
// var config = require('./config');
// var VerifyToken = require('./VerifyToken');
// // const pool = new Pool({
// //   connectionString: process.env.DATABASE_URL,
// //   ssl: true
// //   });
// //Use for localhost testing
// const pool = new Pool({
//   host: 'localhost',
//   port: '5432',
//   user: 'postgres',
//   database: 'postgres',
//   password: 'postgres',
//   ssl: false
// });
//
// //Router
// router.use(bodyParser.urlencoded({ extended: false }));
// router.use(bodyParser.json());
//
// //GET
// router.get('/', function(req,res) {
//   res.send('GET Handler for auth.js: does nothing for now (will eventually return data if the JSON Web Token is valid)');
// });
//
// //GET's the user ID associated with a user token
// router.get('/me', VerifyToken, async function(req, res, next) {
//
//   try {
//     const client = await pool.connect()
//     await client.query('select * from users where id = $1',[req.userId], (err,user) => {
//         console.log("Attempting to select * from users where id = something");
//         console.log("req.userId: " + req.userId);
//         //Now we get the registered user ID (sequence generated by the DB) and create a TOKEN
//         if(err) {
//           console.log("Sending 500 error: problem finding the user");
//           console.error(err);
//           return res.status(500).send("There was a problem finding the user");
//         }
//         if( !user )
//         {
//           console.log("Seding 404 error: No user found");
//           return res.status(404).send("No user found");
//         }
//         console.log("Seding 200 no error and a user was found");
//         res.status(200).send(user);
//     });
//   }
//   catch (err) {
//     console.error(err);
//     res.sendStatus(500);
//   }
// });
//
// //POST: Register a user. Creates a new user entry in the database
// //encrypts the users password, and sends the user a JSON Web Token
// router.post('/register', async function(req,res) {
//
//   var hashedPassword = bcrypt.hashSync(req.body.password, 8);
//   console.log("A client is attempting to register with: ")
//   console.log("Name: " + req.body.name);
//   console.log("Email: " + req.body.email);
//   console.log("Password: " + req.body.password);
//   console.log("...hashed the password: " + hashedPassword);
//
//   //Create (add) the user
//   try {
//     //***
//     var jwtoken = null;
//     var userid = null;
//     const client = await pool.connect()
//     //Insert user into the database (will always insert)
//     //TODO Insert if user does not exist and they are REGISTERING
//     await client.query('insert into users values(99, $1, $2, 1, 1, \'1983-01-01\',$3, $3, 1200, 1200, \'2016-01-01\', 99, 99)',[req.body.email,hashedPassword,req.body.name]);
//     console.log("Inserted a user into the DB...");
//
//     //IF we're registering the user we must generate a JSON WEB TOKEN (jwt)
//     //so we get the users auto gen'd ID from the database, and use it to seed
//     //the jwt.sign method
//     var uid = await client.query('select id from users where username = $2 and email = $1',[req.body.email,req.body.name]);
//
//     console.log("Got auto-generated user ID from the database to use at JWT payload (for encryption): " + uid.rows[0].id);
//     jwtoken = jwt.sign( {id: uid.rows[0].id}, config.secret, {
//       expiresIn: 86400 // expires in 24 hours
//     });
//     console.log("Generated a JSON Web Token based on the users ID and a SECRET key: " + jwtoken);
//     res.status(200).send({ auth: true, token: jwtoken });
//
//     await client.release();
//   } catch (err) {
//     console.error(err);
//     res.sendStatus(500);
//   }
// });
//
// module.exports = router;
